The ``example`` module
======================

Using ``add``
-------------------

This is an example text file in reStructuredText format.  First import
``add`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(6, 4)
    10

    >>> add_integer('a', 1)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(1, 'b')
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(, 4)
    Traceback (most recent call last):
    SyntaxError: invalid syntax

    >>> add_integer(2,)
    100

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer([], 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(3, [])
    Traceback (most recent call last):
    TypeError: b must be an integer

    >>> add_integer(5.5, 5.5)
    10

    >>> add_integer(-3, -5)
    -8

    >>> add_integer((0, 0), 5)
    Traceback (most recent call last):
    TypeError: a must be an integer

    >>> add_integer(float('nan'), 1)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

    >>> add_integer(5e2541, 1)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

    >>> add_integer(1, 3e295165)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer
