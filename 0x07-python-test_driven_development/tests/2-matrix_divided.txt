The ``matrix_divided`` module
======================

Using ``add``
-------------------

This is an example text file in reStructuredText format.  First import
``matrix_divided`` from the ``0-matrix_divided`` module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided(matrix, 'b')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided(None, 4)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    ['l', 2, 3],
    ...    [4, 5, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [
    ...    [1, 2, 3],
    ...    [4, 5, 6, 5]
    ... ]

    >>> matrix_divided(matrix, 3)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix = [
    ...    [1.5, 2, 3],
    ...    [4, 5.4, 6]
    ... ]

    >>> matrix_divided(matrix, 3)
    [[0.5, 0.67, 1.0], [1.33, 1.8, 2.0]]

    >>> matrix_divided(matrix, 2.5)
    [[0.6, 0.8, 1.2], [1.6, 2.16, 2.4]]

    >>> matrix_divided(matrix, float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

    >>> matrix_divided(matrix, )
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
